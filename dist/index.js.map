{"version":3,"file":"index.js","sources":["../src/columns/textColumn.tsx","../src/columns/checkboxColumn.tsx","../src/columns/floatColumn.tsx","../src/columns/progressColumn.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/contexts/DataSheetGridContext.tsx","../src/components/Row.tsx","../src/hooks/useScrollbarWidth.tsx","../src/hooks/useColumnWidths.tsx","../src/components/InnerContainer.tsx","../src/hooks/useGetBoundingRect.tsx","../src/hooks/useDocumentEventListener.tsx","../src/components/AddRowsCounter.tsx","../src/components/ContextMenu.tsx","../src/components/DataSheetGrid.tsx","../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useLayoutEffect, useRef } from 'react'\nimport { Column } from '../typings'\n\nconst Component = ({ focus, onChange, value }) => {\n  const ref = useRef<HTMLInputElement>(null)\n\n  useLayoutEffect(() => {\n    if (focus) {\n      ref.current?.select()\n    } else {\n      ref.current?.blur()\n    }\n  }, [focus])\n\n  return (\n    <input\n      className='dsg-input'\n      ref={ref}\n      style={{ pointerEvents: focus ? 'auto' : 'none' }}\n      value={value || ''}\n      onChange={(e) => onChange(e.target.value || null)}\n    />\n  )\n}\n\nexport function textColumn<TRow = any>({\n  key,\n  ...rest\n}: Partial<Column<TRow>> & { key: string }): Partial<Column<TRow>> {\n  return {\n    render: ({ focus, rowData, setRowData }) => (\n      <Component\n        value={rowData[key]}\n        focus={focus}\n        onChange={(value) => setRowData({ ...rowData, [key]: value })}\n      />\n    ),\n    deleteValue: ({ rowData }) => ({ ...rowData, [key]: null }),\n    copyValue: ({ rowData }) => rowData[key],\n    pasteValue: ({ rowData, value }) => ({ ...rowData, [key]: value || null }),\n    ...rest,\n  }\n}\n","import * as React from 'react'\nimport { useLayoutEffect, useRef } from 'react'\nimport { Column } from '../typings'\n\nconst FALSY = [\n  '',\n  'false',\n  'no',\n  'off',\n  'disabled',\n  '0',\n  'n',\n  'f',\n  'unchecked',\n  'undefined',\n  'null',\n  'wrong',\n  'negative',\n]\n\nconst Component = ({ focus, active, onChange, value, done }) => {\n  const ref = useRef<HTMLInputElement>(null)\n\n  useLayoutEffect(() => {\n    if (focus) {\n      onChange(!value)\n      done({ nextRow: false })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [focus, done])\n\n  return (\n    <input\n      className='dsg-checkbox'\n      type='checkbox'\n      ref={ref}\n      checked={Boolean(value)}\n      onMouseDown={() => !active && onChange(!value)}\n      onChange={() => null}\n    />\n  )\n}\n\nexport function checkboxColumn<TRow = any>({\n  key,\n  ...rest\n}: Partial<Column<TRow>> & { key: string }): Partial<Column<TRow>> {\n  return {\n    render: ({ focus, active, setRowData, rowData, done }) => (\n      <Component\n        value={rowData[key]}\n        focus={focus}\n        active={active}\n        done={done}\n        onChange={(value) => setRowData({ ...rowData, [key]: value })}\n      />\n    ),\n    deleteValue: ({ rowData }) => ({ ...rowData, [key]: false }),\n    copyValue: ({ rowData }) => (rowData[key] ? 'YES' : 'NO'),\n    pasteValue: ({ rowData, value }) => ({\n      ...rowData,\n      [key]: !FALSY.includes(value.toLowerCase()),\n    }),\n    ...rest,\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { Column } from '../typings'\n\nconst numberToString = (value: any): string =>\n  typeof value === 'number' && !isNaN(value) ? String(value) : ''\n\nconst Component = ({ focus, onChange, value, typeObj }) => {\n  const [rawValue, setRawValue] = useState<string>(numberToString(value))\n  const ref = useRef<HTMLInputElement>(null)\n\n  useLayoutEffect(() => {\n    if (focus) {\n      ref.current?.select()\n    } else {\n      ref.current?.blur()\n    }\n  }, [focus])\n\n  useEffect(() => {\n    if (!focus) {\n      setRawValue(numberToString(value))\n    }\n  }, [focus, value])\n\n  return (\n    <input\n      className='dsg-input dsg-input-align-right'\n      ref={ref}\n      style={{ pointerEvents: focus ? 'auto' : 'none' }}\n      value={rawValue ? rawValue === '0' ? '-' : Math.abs(Number(rawValue)) > 1000 ? Math.round(Number(rawValue)) : rawValue : '-'}\n      onChange={(e) => {\n        if(!typeObj?.includes('Formula')){\n          const targetValue = e.target.value\n          const number = parseFloat(targetValue)\n          setRawValue(targetValue)\n          onChange(!isNaN(number) && targetValue ? number : null)\n        }\n      }}\n    />\n  )\n}\n\nexport function floatColumn<TRow = any>({\n  key,\n  ...rest\n}: Partial<Column<TRow>> & { key: string }): Partial<Column<TRow>> {\n  return {\n\n    render: ({ focus, rowData, setRowData }) => (\n      <Component\n        typeObj={rowData?.['typeObj']}\n        value={rowData[key]}\n        focus={focus}\n        onChange={(value) => setRowData({ ...rowData, [key]: value })}\n      />\n    ),\n    deleteValue: ({ rowData }) => ({ ...rowData, [key]: null }),\n    copyValue: ({ rowData }) => rowData[key],\n    pasteValue: ({ rowData, value }) => {\n      const number = parseFloat(value)\n      return { ...rowData, [key]: !isNaN(number) ? number : null }\n    },\n    ...rest,\n  }\n}\n","import * as React from 'react'\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { Column } from '../typings'\n\nconst numberToString = (value: any): string =>\n  typeof value === 'number' && !isNaN(value) ? String(value) : ''\n\nconst Component = ({ focus, onChange, value }) => {\n  const [rawValue, setRawValue] = useState<string>(numberToString(value * 100))\n  const ref = useRef<HTMLInputElement>(null)\n\n  useLayoutEffect(() => {\n    if (focus) {\n      ref.current?.select()\n    } else {\n      ref.current?.blur()\n    }\n  }, [focus])\n\n  useEffect(() => {\n    if (!focus) {\n      setRawValue(typeof value === 'number' ? numberToString(value * 100) : '')\n    }\n  }, [focus, value])\n\n  return (\n    <React.Fragment>\n      <input\n        className='dsg-input dsg-input-align-right'\n        ref={ref}\n        style={{ pointerEvents: focus ? 'auto' : 'none' }}\n        value={rawValue}\n        onChange={(e) => {\n          const targetValue = e.target.value\n          const number = parseFloat(targetValue)\n          setRawValue(targetValue)\n          onChange(\n            !isNaN(number) && targetValue\n              ? Math.min(100, Math.max(0, number)) / 100\n              : null\n          )\n        }}\n      />\n      <span className='dsg-input-suffix'>%</span>\n      <div className='dsg-input-progress-indicator' style={{ width: value * 100 + '%'}} />\n    </React.Fragment>\n  )\n}\n\nexport function progressColumn<TRow = any>({\n  key,\n  ...rest\n}: Partial<Column<TRow>> & { key: string }): Partial<Column<TRow>> {\n  return {\n    render: ({ focus, rowData, setRowData }) => (\n      <Component\n        value={rowData[key]}\n        focus={focus}\n        onChange={(value) => setRowData({ ...rowData, [key]: value })}\n      />\n    ),\n    deleteValue: ({ rowData }) => ({ ...rowData, [key]: null }),\n    copyValue: ({ rowData }) => typeof rowData[key] === 'number' ? rowData[key] * 100 + '%' : null,\n    pasteValue: ({ rowData, value }) => {\n      const number = parseFloat(value)\n      return {\n        ...rowData,\n        [key]: !isNaN(number) ? Math.min(100, Math.max(0, number)) / 100 : null,\n      }\n    },\n    ...rest,\n  }\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import * as React from 'react'\nimport { GridContext } from '../typings'\n\nexport const DataSheetGridContext = React.createContext<GridContext>({\n  focus: false,\n  activeCell: null,\n  headerRowHeight: 0,\n  rowHeight: 0,\n  columnWidths: [],\n  columnOffsets: [],\n  innerWidth: 0,\n  data: [],\n  columns: [],\n  selection: null,\n  editing: false,\n  onChange: () => null,\n  isCellDisabled: () => false,\n  onDoneEditing: () => undefined,\n  onInsertRowAfter: () => undefined,\n  onDuplicateRows: () => undefined,\n  onDeleteRows: () => undefined,\n  rowClassName: '',\n})\n","import * as React from 'react'\nimport cx from 'classnames'\n\nimport { ListChildComponentProps } from 'react-window'\nimport { useContext } from 'react'\nimport { DataSheetGridContext } from '../contexts/DataSheetGridContext'\n\nexport const Row = React.memo(\n  ({ style, index: rowIndex }: ListChildComponentProps) => {\n    const {\n      innerWidth,\n      selection,\n      data,\n      columns,\n      activeCell,\n      editing,\n      onChange,\n      isCellDisabled,\n      onDoneEditing,\n      columnWidths,\n      columnOffsets,\n      rowHeight,\n      onInsertRowAfter,\n      onDuplicateRows,\n      onDeleteRows,\n      rowClassName,\n    } = useContext(DataSheetGridContext)\n\n    const headerRow = rowIndex === 0\n\n    if (headerRow) {\n      return null\n    }\n\n    return (\n      <div\n      className={cx(\n        'dsg-row',\n        typeof rowClassName === 'string' ? rowClassName : null,\n        typeof rowClassName === 'function'\n          ? rowClassName({ rowData: data, rowIndex: rowIndex })\n          : null\n      )}\n        style={{ ...style, width: `${innerWidth}px` }}\n      >\n        {columnWidths.map((width, columnIndex) => {\n          const gutterColumn = columnIndex === 0\n          const active =\n            activeCell?.col === columnIndex - 1 &&\n            activeCell.row === rowIndex - 1\n\n          const disabled = isCellDisabled({\n            col: columnIndex - 1,\n            row: rowIndex - 1,\n          })\n\n          return (\n            <div\n              key={columnIndex}\n              className={cx({\n                'dsg-cell': true,\n                'dsg-cell-disabled': !headerRow && disabled,\n                'dsg-cell-gutter': gutterColumn,\n                'dsg-cell-last-column': columnIndex === columns.length - 1,\n                'dsg-cell-last-row': rowIndex === data.length,\n                'dsg-cell-gutter-active':\n                  gutterColumn &&\n                  (activeCell?.row === rowIndex - 1 ||\n                    (selection &&\n                      rowIndex >= selection.min.row + 1 &&\n                      rowIndex <= selection.max.row + 1)),\n              })}\n              style={{\n                width: `${width}px`,\n                left: `${columnOffsets[columnIndex - 1] || 0}px`,\n                height: `${rowHeight}px`,\n                top: 0,\n              }}\n            >\n              {columns[columnIndex].render({\n                insertRowBelow: () => {\n                  onInsertRowAfter(rowIndex - 1)\n                },\n                duplicateRow: () => {\n                  onDuplicateRows(rowIndex - 1)\n                },\n                deleteRow: () => {\n                  onDeleteRows(rowIndex - 1)\n                },\n                active,\n                focus: active && editing,\n                rowIndex: rowIndex - 1,\n                rowData: data[rowIndex - 1],\n                columnIndex: columnIndex - 1,\n                done: onDoneEditing,\n                disabled,\n                setRowData: (rowData) =>\n                  onChange([\n                    ...data.slice(0, rowIndex - 1),\n                    rowData,\n                    ...data.slice(rowIndex),\n                  ]),\n              })}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\n","import { scrollbarWidth } from '@xobotyi/scrollbar-width'\nimport { useLayoutEffect, useState } from 'react'\n\nexport const useScrollbarWidth = () => {\n  const [width, setWidth] = useState<number | undefined>(scrollbarWidth())\n\n  useLayoutEffect(() => {\n    setTimeout(() => setWidth(scrollbarWidth()), 0)\n  }, [])\n\n  return width\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { useScrollbarWidth } from './useScrollbarWidth'\nimport { Column } from '../typings'\n\nexport const useColumnWidths = (\n  width: number,\n  columns: Column[],\n  includeScrollbar: boolean\n) => {\n  const scrollbarWidth = useScrollbarWidth()\n  const [widths, setWidths] = useState<number[] | null>(null)\n  const innerWidth = useMemo<number | null>(\n    () =>\n      widths &&\n      widths.reduce((total, w) => {\n        return total + w\n      }),\n    [widths]\n  )\n  const offsets = useMemo<number[] | null>(() => {\n    let total = 0\n    return (\n      widths &&\n      widths.map((w, i) => {\n        total += w\n        return i === widths.length - 1 ? Infinity : total\n      })\n    )\n  }, [widths])\n\n  const columnsHash = columns\n    .map(({ width, minWidth, maxWidth }) =>\n      [width, minWidth, maxWidth].join(',')\n    )\n    .join('|')\n\n  useEffect(() => {\n    if (scrollbarWidth !== undefined || !includeScrollbar) {\n      const el = document.createElement('div')\n\n      el.style.display = 'flex'\n      el.style.position = 'fixed'\n      el.style.width = `${\n        width - (includeScrollbar ? (scrollbarWidth as number) : 0)\n      }px`\n      el.style.left = '-999px'\n      el.style.top = '-1px'\n\n      const children = columns.map((column) => {\n        const child = document.createElement('div')\n\n        child.style.display = 'block'\n        child.style.flex = String(column.width)\n        child.style.minWidth = `${column.minWidth}px`\n        child.style.maxWidth = `${column.maxWidth}px`\n\n        return child\n      })\n\n      children.forEach((child) => el.appendChild(child))\n      document.body.insertBefore(el, null)\n\n      setWidths(children.map((child) => child.offsetWidth))\n      el.remove()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width, columnsHash, scrollbarWidth, includeScrollbar])\n\n  return { widths, offsets, innerWidth }\n}\n","import * as React from 'react'\nimport { forwardRef, useContext, useMemo } from 'react'\nimport { DataSheetGridContext } from '../contexts/DataSheetGridContext'\nimport cx from 'classnames'\n\nconst buildSquare = (top, right, bottom, left) => {\n  return [\n    [left, top],\n    [right, top],\n    [right, bottom],\n    [left, bottom],\n    [left, top],\n  ]\n}\n\nconst buildClipPath = (top, right, bottom, left) => {\n  const values = [\n    ...buildSquare(0, '100%', '100%', 0),\n    ...buildSquare(top, right, bottom, left),\n  ]\n\n  return `polygon(evenodd, ${values\n    .map((pair) =>\n      pair\n        .map((value) =>\n          typeof value === 'number' && value !== 0 ? value + 'px' : value\n        )\n        .join(' ')\n    )\n    .join(',')})`\n}\n\nexport const InnerContainer = forwardRef<HTMLDivElement>(\n  ({ children, ...rest }, ref) => {\n    const {\n      activeCell,\n      columnWidths,\n      columnOffsets,\n      innerWidth,\n      rowHeight,\n      headerRowHeight,\n      selection,\n      data,\n      editing,\n      columns,\n      isCellDisabled,\n    } = useContext(DataSheetGridContext)\n\n    const extraPixelV = (rowI: number): number => {\n      return rowI < data.length - 1 ? 1 : 0\n    }\n\n    const extraPixelH = (colI: number): number => {\n      return colI < columns.length - 2 ? 1 : 0\n    }\n\n    const activeCellRect = activeCell && {\n      width: columnWidths[activeCell.col + 1] + extraPixelH(activeCell.col),\n      height: rowHeight + extraPixelV(activeCell.row),\n      left: columnWidths\n        .slice(0, activeCell.col + 1)\n        .reduce((a, b) => a + b, 0),\n      top: rowHeight * activeCell.row + headerRowHeight,\n    }\n\n    const selectionRect = selection && {\n      width: columnWidths\n        .slice(selection.min.col + 1, selection.max.col + 2)\n        .reduce((a, b) => a + b, extraPixelH(selection.max.col)),\n      height:\n        rowHeight * (selection.max.row - selection.min.row + 1) +\n        extraPixelV(selection.max.row),\n      left: columnWidths\n        .slice(0, selection.min.col + 1)\n        .reduce((a, b) => a + b, 0),\n      top: rowHeight * selection.min.row + headerRowHeight,\n    }\n\n    const selectionIsDisabled = useMemo(() => {\n      if (!selection) {\n        return false\n      }\n\n      for (let col = selection.min.col; col <= selection.max.col; ++col) {\n        for (let row = selection.min.row; row <= selection.max.row; ++row) {\n          if (!isCellDisabled({ col, row })) {\n            return false\n          }\n        }\n      }\n\n      return true\n    }, [isCellDisabled, selection])\n\n    return (\n      <div ref={ref} {...rest}>\n        <div\n          className={cx({\n            'dsg-header-row': true,\n          })}\n          style={{ height: `${headerRowHeight}px`, width: `${innerWidth}px` }}\n        >\n          {columnWidths.map((width, columnIndex) => {\n            const gutterColumn = columnIndex === 0\n\n            return (\n              <div\n                key={columnIndex}\n                className={cx({\n                  'dsg-cell': true,\n                  'dsg-cell-header': true,\n                  'dsg-cell-gutter': gutterColumn,\n                  'dsg-cell-last-column': columnIndex === columns.length - 1,\n                  'dsg-cell-header-active':\n                    activeCell?.col === columnIndex - 1 ||\n                    (selection &&\n                      columnIndex >= selection.min.col + 1 &&\n                      columnIndex <= selection.max.col + 1),\n                })}\n                style={{\n                  width: `${width}px`,\n                  left: `${columnOffsets[columnIndex - 1] || 0}px`,\n                  height: `${headerRowHeight}px`,\n                  top: 0,\n                }}\n              >\n                {columns[columnIndex].title}\n              </div>\n            )\n          })}\n        </div>\n        {children}\n        {activeCellRect && (\n          <div\n            className={cx({\n              'dsg-active-cell': true,\n              'dsg-active-cell-focus': editing,\n              'dsg-active-cell-disabled':\n                activeCell && isCellDisabled(activeCell),\n            })}\n            style={activeCellRect}\n          />\n        )}\n        {selectionRect && activeCellRect && (\n          <div\n            className={cx({\n              'dsg-selection-rect': true,\n              'dsg-selection-rect-disabled': selectionIsDisabled,\n            })}\n            style={{\n              ...selectionRect,\n              clipPath: buildClipPath(\n                activeCellRect.top - selectionRect.top,\n                activeCellRect.left - selectionRect.left,\n                activeCellRect.top + activeCellRect.height - selectionRect.top,\n                activeCellRect.left + activeCellRect.width - selectionRect.left\n              ),\n            }}\n          />\n        )}\n      </div>\n    )\n  }\n)\n","import { MutableRefObject, RefObject, useRef } from 'react'\nimport { throttle } from 'throttle-debounce'\n\nconst compute = (\n  resultRef: MutableRefObject<DOMRect | null>,\n  ref: RefObject<HTMLElement>\n) => {\n  resultRef.current = ref.current?.getBoundingClientRect() || null\n}\n\nconst throttledCompute = throttle(\n  200,\n  (\n    resultRef: MutableRefObject<DOMRect | null>,\n    ref: RefObject<HTMLElement>,\n    force: boolean = false\n  ) => {\n    if (force) {\n      compute(resultRef, ref)\n    } else {\n      setTimeout(() => compute(resultRef, ref), 0)\n    }\n  }\n)\n\n// Cache bounding rect in a ref and only recompute every 200ms\nexport const useGetBoundingRect = (ref: RefObject<HTMLElement>) => {\n  const boundingRect = useRef<DOMRect | null>(null)\n\n  return (force: boolean = false) => {\n    throttledCompute(boundingRect, ref, force)\n    return boundingRect.current\n  }\n}\n","import { useEffect } from 'react'\n\nexport const useDocumentEventListener = (type: string, listener) => {\n  useEffect(() => {\n    document.addEventListener(type, listener)\n\n    return () => {\n      document.removeEventListener(type, listener)\n    }\n  }, [listener, type])\n}\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { CounterComponentProps } from '../typings'\n\nexport const AddRowsCounter = React.memo(\n  ({ addRows }: CounterComponentProps) => {\n    const [value, setValue] = useState<number>(1)\n    const [rawValue, setRawValue] = useState<string>(String(value))\n\n    return (\n      <button\n        className='dsg-add-row'\n        type='button'\n        onClick={(e) => {\n          // @ts-ignore\n          if (e.target.tagName !== 'INPUT') {\n            addRows(value)\n          }\n        }}\n      >\n        Add\n        <input\n          className='dsg-add-row-input'\n          value={rawValue}\n          onBlur={() => setRawValue(String(value))}\n          onChange={(e) => {\n            setRawValue(e.target.value)\n            setValue(Math.max(1, Math.round(parseInt(e.target.value) || 0)))\n          }}\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') {\n              addRows(value)\n            }\n          }}\n        />\n        rows\n      </button>\n    )\n  }\n)\n","import * as React from 'react'\nimport { ContextMenuItem, ContextMenuProps } from '../typings'\nimport { useCallback, useRef } from 'react'\nimport { useDocumentEventListener } from '../hooks/useDocumentEventListener'\n\nconst renderItem = (item: ContextMenuItem) => {\n  if (item.type === 'DELETE_ROW') {\n    return 'Delete row'\n  }\n\n  if (item.type === 'DELETE_ROWS') {\n    return (\n      <React.Fragment>\n        Delete rows <b>{item.fromRow}</b> to <b>{item.toRow}</b>\n      </React.Fragment>\n    )\n  }\n\n  if (item.type === 'INSERT_ROW_BELLOW') {\n    return 'Insert row below'\n  }\n\n  if (item.type === 'DUPLICATE_ROW') {\n    return 'Duplicate row'\n  }\n\n  if (item.type === 'DUPLICATE_ROWS') {\n    return (\n      <React.Fragment>\n        Duplicate rows <b>{item.fromRow}</b> to <b>{item.toRow}</b>\n      </React.Fragment>\n    )\n  }\n\n  return item.type\n}\n\nexport const ContextMenu = ({\n  clientX,\n  clientY,\n  items,\n  close,\n}: ContextMenuProps) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const onClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const clickInside = containerRef.current?.contains(event.target as Node)\n\n      if (!clickInside) {\n        close()\n      }\n    },\n    [close]\n  )\n  useDocumentEventListener('mousedown', onClickOutside)\n\n  return (\n    <div\n      className='dsg-context-menu'\n      style={{ left: clientX + 'px', top: clientY + 'px' }}\n      ref={containerRef}\n    >\n      {items.map((item) => (\n        <div\n          key={item.type}\n          onClick={item.action}\n          className='dsg-context-menu-item'\n        >\n          {renderItem(item)}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { VariableSizeList } from 'react-window'\nimport { Row as RowComponent } from './Row'\n\nimport { useColumnWidths } from '../hooks/useColumnWidths'\nimport { InnerContainer } from './InnerContainer'\nimport { DataSheetGridContext } from '../contexts/DataSheetGridContext'\nimport { useGetBoundingRect } from '../hooks/useGetBoundingRect'\nimport { useDocumentEventListener } from '../hooks/useDocumentEventListener'\nimport deepEqual from 'fast-deep-equal'\nimport {\n  Cell,\n  Column,\n  ContextMenuItem,\n  DataSheetGridProps,\n  GridContext,\n} from '../typings'\nimport useResizeObserver from '@react-hook/resize-observer'\nimport { useScrollbarWidth } from '../hooks/useScrollbarWidth'\nimport { AddRowsCounter } from './AddRowsCounter'\nimport { ContextMenu } from './ContextMenu'\n\nconst DEFAULT_DATA = []\nconst DEFAULT_COLUMNS = []\nconst DEFAULT_CREATE_ROW = () => ({})\nconst DEFAULT_ON_CHANGE = () => null\nconst DEFAULT_DUPLICATE_ROW = ({ rowData }) => ({ ...rowData })\nconst DEFAULT_IS_ROW_EMPTY = ({ rowData }) =>\n  Object.values(rowData).every((value) => !value)\nconst DEFAULT_RENDER_GUTTER_COLUMN = ({ rowIndex }) => rowIndex + 1\n\nfunction setStateDeepEqual<T>(newValue: T | ((old: T) => T)) {\n  return (oldValue: T): T => {\n    const newVal =\n      // @ts-ignore\n      typeof newValue === 'function' ? newValue(oldValue) : newValue\n    return deepEqual(oldValue, newVal) ? oldValue : newVal\n  }\n}\n\nexport function DataSheetGrid<TRow = any>({\n  data = DEFAULT_DATA,\n  onChange = DEFAULT_ON_CHANGE,\n  columns: rawColumns = DEFAULT_COLUMNS,\n  height = 400,\n  rowHeight = 40,\n  headerRowHeight = rowHeight,\n  gutterColumnWidth = '0 0 40px',\n  createRow = DEFAULT_CREATE_ROW as () => TRow,\n  duplicateRow = DEFAULT_DUPLICATE_ROW,\n  isRowEmpty = DEFAULT_IS_ROW_EMPTY,\n  counterComponent = AddRowsCounter,\n  contextMenuComponent = ContextMenu,\n  autoAddRow = false,\n  lockRows = false,\n  disableContextMenu: disableContextMenuRaw = false,\n  renderGutterColumn = DEFAULT_RENDER_GUTTER_COLUMN,\n  rowClassName,\n}: DataSheetGridProps<TRow>) {\n  const disableContextMenu = disableContextMenuRaw || lockRows\n\n  // Add gutter column\n  const columns = useMemo<Column[]>(\n    () =>\n      [\n        {\n          width: gutterColumnWidth,\n          minWidth: 0,\n          title: <div className='dsg-corner-indicator' />,\n          render: renderGutterColumn,\n        },\n        ...rawColumns,\n      ].map((column) => ({\n        width: 1,\n        minWidth: 100,\n        render: () => null,\n        disableKeys: false,\n        disabled: false,\n        keepFocus: false,\n        deleteValue: ({ rowData }) => rowData,\n        copyValue: () => null,\n        pasteValue: ({ rowData }) => rowData,\n        ...column,\n      })),\n    [gutterColumnWidth, rawColumns, renderGutterColumn]\n  )\n\n  // Outer width (including borders) of the outer container\n  const [width, setWidth] = useState<number>(0)\n\n  // Height of all rows (including header row)\n  const innerHeight = headerRowHeight + rowHeight * data.length\n\n  // True when the vertical scrollbar is visible\n  const verticalScrollBar = height < innerHeight\n\n  const {\n    widths: columnWidths,\n    offsets: columnOffsets,\n    innerWidth,\n  } = useColumnWidths(width - 1, columns, verticalScrollBar)\n\n  // True when the horizontal scrollbar is visible\n  const horizontalScrollBar = (innerWidth || 0) >= width\n\n  const scrollbarWidth = useScrollbarWidth() || 0\n\n  const listRef = useRef<VariableSizeList>(null)\n  const containerRef = useRef<HTMLElement>(null)\n  const outsideContainerRef = useRef<HTMLDivElement>(null)\n  const getContainerBoundingRect = useGetBoundingRect(containerRef)\n\n  // Recompute the width as outside container is resized\n  useLayoutEffect(() => {\n    setWidth(\n      (w) => outsideContainerRef.current?.getBoundingClientRect().width || w\n    )\n  }, [])\n  useResizeObserver(outsideContainerRef, (entry) =>\n    setWidth(entry.contentRect.width)\n  )\n\n  // True when the active cell is being edited\n  const [editing, setEditing] = useState(false)\n\n  // x,y coordinates of the right click\n  const [contextMenu, setContextMenu] = useState<{\n    x: number\n    y: number\n  } | null>(null)\n\n  // Items of the context menu\n  const [contextMenuItems, setContextMenuItems] = useState<ContextMenuItem[]>(\n    []\n  )\n\n  // Highlighted cell, null when not focused\n  const [activeCell, setActiveCell] = useState<Cell | null>(null)\n\n  // The selection cell and the active cell are the two corners of the selection, null when nothing is selected\n  const [selectionCell, setSelectionCell] = useState<Cell | null>(null)\n\n  // Behavior of the selection when the user drags the mouse around\n  const [selectionMode, setSelectionMode] = useState({\n    // True when the position of the cursor should impact the columns of the selection\n    columns: false,\n    // True when the position of the cursor should impact the rows of the selection\n    rows: false,\n    // True when the user is dragging the mouse around to select\n    active: false,\n  })\n\n  // Min and max of the current selection (rectangle defined by the active cell and the selection cell), null when nothing is selected\n  const selection = useMemo<{ min: Cell; max: Cell } | null>(\n    () =>\n      activeCell &&\n      selectionCell && {\n        min: {\n          col: Math.min(activeCell.col, selectionCell?.col),\n          row: Math.min(activeCell.row, selectionCell?.row),\n        },\n        max: {\n          col: Math.max(activeCell.col, selectionCell?.col),\n          row: Math.max(activeCell.row, selectionCell?.row),\n        },\n      },\n    [activeCell, selectionCell]\n  )\n\n  // Scroll to any given cell making sure it is in view\n  const scrollTo = useCallback(\n    (cell: Cell) => {\n      // Align top\n      const topMax = cell.row * rowHeight\n      // Align bottom\n      const topMin =\n        (cell.row + 1) * rowHeight +\n        headerRowHeight -\n        (listRef.current?.props.height as number) +\n        1\n      // @ts-ignore\n      const scrollTop = listRef.current?.state.scrollOffset as number\n\n      if (scrollTop > topMax) {\n        listRef.current?.scrollTo(topMax)\n      } else if (scrollTop < topMin) {\n        listRef.current?.scrollTo(topMin)\n      }\n\n      if (columnOffsets && columnWidths) {\n        // Align left\n        const leftMax = columnOffsets[cell.col] - columnOffsets[0]\n        // Align right\n        const leftMin =\n          columnOffsets[cell.col] + columnWidths[cell.col + 1] - width + 1\n\n        // @ts-ignore\n        const outerRef = listRef.current?._outerRef as HTMLElement\n        const scrollLeft = outerRef.scrollLeft\n\n        if (scrollLeft > leftMax) {\n          outerRef.scrollLeft = 0\n        } else if (scrollLeft < leftMin) {\n          outerRef.scrollLeft = 0\n        }\n      }\n    },\n    [rowHeight, headerRowHeight, columnOffsets, width, columnWidths]\n  )\n\n  // Scroll to the selectionCell cell when it changes\n  useEffect(() => {\n    if (selectionCell) {\n      scrollTo(selectionCell)\n    }\n  }, [selectionCell, scrollTo])\n\n  // Scroll to the active cell when it changes\n  useEffect(() => {\n    if (activeCell) {\n      scrollTo(activeCell)\n    }\n  }, [activeCell, scrollTo])\n\n  // Blur any element on focusing the grid\n  useEffect(() => {\n    if (activeCell !== null) {\n      ;(document.activeElement as HTMLElement).blur()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeCell !== null])\n\n  // Extract the coordinates of the cursor from a mouse event\n  const getCursorIndex = useCallback(\n    (event: MouseEvent, force: boolean = false): Cell | null => {\n      const boundingClientRect = getContainerBoundingRect(force)\n      const outsideBoundingClientRect =\n        force && outsideContainerRef.current?.getBoundingClientRect()\n\n      if (boundingClientRect && columnOffsets) {\n        let x = event.clientX - boundingClientRect.left\n        let y = event.clientY - boundingClientRect.top\n\n        if (outsideBoundingClientRect) {\n          if (\n            event.clientY - outsideBoundingClientRect.top <=\n            headerRowHeight\n          ) {\n            y = 0\n          }\n          if (\n            event.clientX - outsideBoundingClientRect.left <=\n            columnOffsets[0]\n          ) {\n            x = 0\n          }\n        }\n\n        return {\n          col: columnOffsets.findIndex((right) => x < right) - 1,\n          row: Math.min(\n            data.length - 1,\n            Math.max(-1, Math.floor((y - headerRowHeight) / rowHeight))\n          ),\n        }\n      }\n\n      return null\n    },\n    [\n      getContainerBoundingRect,\n      columnOffsets,\n      data.length,\n      headerRowHeight,\n      rowHeight,\n    ]\n  )\n\n  const isCellDisabled = useCallback(\n    (cell: Cell): boolean => {\n      const disabled = columns[cell.col + 1].disabled\n\n      return Boolean(\n        typeof disabled === 'function'\n          ? disabled({ rowData: data[cell.row] })\n          : disabled\n      )\n    },\n    [columns, data]\n  )\n\n  const onInsertRowAfter = useCallback(\n    (row: number, count = 1) => {\n      if (!createRow) {\n        return\n      }\n      setSelectionCell(null)\n      setEditing(false)\n\n      if (lockRows) {\n        return\n      }\n\n      onChange([\n        ...data.slice(0, row + 1),\n        ...new Array(count).fill(0).map(createRow),\n        ...data.slice(row + 1),\n      ])\n      setActiveCell(\n        setStateDeepEqual((a) => ({ col: a?.col || 0, row: row + count }))\n      )\n    },\n    [createRow, data, lockRows, onChange]\n  )\n\n  const onDoneEditing = useCallback(\n    ({ nextRow = true } = {}) => {\n      if (activeCell?.row === data.length - 1) {\n        if (nextRow && autoAddRow) {\n          onInsertRowAfter(activeCell.row)\n        } else {\n          setEditing(false)\n        }\n      } else {\n        setEditing(false)\n\n        if (nextRow) {\n          setActiveCell(setStateDeepEqual((a) => a && { ...a, row: a.row + 1 }))\n        }\n      }\n    },\n    [activeCell, autoAddRow, data.length, onInsertRowAfter]\n  )\n\n  const onDuplicateRows = useCallback(\n    (rowMin, rowMax = rowMin) => {\n      if (lockRows) {\n        return\n      }\n\n      onChange([\n        ...data.slice(0, rowMax + 1),\n        ...data\n          .slice(rowMin, rowMax + 1)\n          .map((rowData) => duplicateRow({ rowData })),\n        ...data.slice(rowMax + 1),\n      ])\n      setActiveCell(\n        setStateDeepEqual<Cell | null>({ col: 0, row: rowMax + 1 })\n      )\n      setSelectionCell(\n        setStateDeepEqual<Cell | null>({\n          col: columns.length - 2,\n          row: 2 * rowMax - rowMin + 1,\n        })\n      )\n      setEditing(false)\n    },\n    [columns.length, data, duplicateRow, lockRows, onChange]\n  )\n\n  const onDeleteRows = useCallback(\n    (rowMin, rowMax = rowMin) => {\n      if (lockRows) {\n        return\n      }\n\n      setEditing(false)\n      setActiveCell(\n        setStateDeepEqual((a) => {\n          const row = Math.min(data.length - 2 - rowMax + rowMin, rowMin)\n\n          if (row < 0) {\n            return null\n          }\n\n          return a && { ...a, row }\n        })\n      )\n      setSelectionCell(null)\n      onChange([...data.slice(0, rowMin), ...data.slice(rowMax + 1)])\n    },\n    [data, lockRows, onChange]\n  )\n\n  const onDelete = useCallback(() => {\n    if (!activeCell) {\n      return\n    }\n\n    const min: Cell = selection?.min || activeCell\n    const max: Cell = selection?.max || activeCell\n\n    if (\n      data\n        .slice(min.row, max.row + 1)\n        .every((rowData) => isRowEmpty({ rowData }))\n    ) {\n      onDeleteRows(min.row, max.row)\n      return\n    }\n\n    const newData = [...data]\n\n    for (let row = min.row; row <= max.row; ++row) {\n      for (let col = min.col; col <= max.col; ++col) {\n        if (!isCellDisabled({ col, row })) {\n          const { deleteValue = ({ rowData }) => rowData } = columns[col + 1]\n          newData[row] = deleteValue({ rowData: newData[row] })\n        }\n      }\n    }\n\n    if (deepEqual(newData, data)) {\n      setActiveCell(\n        setStateDeepEqual<Cell | null>({ col: 0, row: min.row })\n      )\n      setSelectionCell(\n        setStateDeepEqual<Cell | null>({\n          col: columns.length - 2,\n          row: max.row,\n        })\n      )\n      return\n    }\n\n    onChange(newData)\n  }, [\n    activeCell,\n    columns,\n    data,\n    isCellDisabled,\n    isRowEmpty,\n    onChange,\n    onDeleteRows,\n    selection,\n  ])\n\n  const onCopy = useCallback(\n    (event: ClipboardEvent) => {\n      if (!editing && activeCell) {\n        const copyData: Array<Array<number | string | null>> = []\n\n        const min: Cell = selection?.min || activeCell\n        const max: Cell = selection?.max || activeCell\n\n        for (let row = min.row; row <= max.row; ++row) {\n          copyData.push([])\n\n          for (let col = min.col; col <= max.col; ++col) {\n            const { copyValue = () => null } = columns[col + 1]\n            copyData[row - min.row].push(copyValue({ rowData: data[row] }))\n          }\n        }\n\n        event.clipboardData?.setData(\n          'text/plain',\n          copyData.map((row) => row.join('\\t')).join('\\n')\n        )\n        event.preventDefault()\n      }\n    },\n    [activeCell, columns, data, editing, selection]\n  )\n  useDocumentEventListener('copy', onCopy)\n\n  const onCut = useCallback(\n    (event: ClipboardEvent) => {\n      if (!editing && activeCell) {\n        onCopy(event)\n        onDelete()\n        event.preventDefault()\n      }\n    },\n    [activeCell, editing, onCopy, onDelete]\n  )\n  useDocumentEventListener('cut', onCut)\n\n  const onPaste = useCallback(\n    async (event: ClipboardEvent) => {\n      if (!editing && activeCell) {\n        const pasteData =\n          event.clipboardData\n            ?.getData('text')\n            .replace(/\\r/g, '')\n            .split('\\n')\n            .map((row) => row.split('\\t')) || []\n\n        const min: Cell = selection?.min || activeCell\n        const max: Cell = selection?.max || activeCell\n\n        // Paste single row\n        if (pasteData.length === 1) {\n          const newData = [...data]\n\n          for (\n            let columnIndex = 0;\n            columnIndex < pasteData[0].length;\n            columnIndex++\n          ) {\n            const pasteValue = columns[min.col + columnIndex + 1]?.pasteValue\n\n            if (pasteValue) {\n              for (let rowIndex = min.row; rowIndex <= max.row; rowIndex++) {\n                if (\n                  !isCellDisabled({ col: columnIndex + min.col, row: rowIndex })\n                ) {\n                  newData[rowIndex] = await pasteValue({\n                    rowData: newData[rowIndex],\n                    value: pasteData[0][columnIndex],\n                  })\n                }\n              }\n            }\n          }\n\n          onChange(newData)\n          setActiveCell(\n            setStateDeepEqual<Cell | null>({ col: min.col, row: min.row })\n          )\n          setSelectionCell(\n            setStateDeepEqual<Cell | null>({\n              col: min.col + pasteData[0].length - 1,\n              row: max.row,\n            })\n          )\n        } else {\n          // Paste multiple rows\n          let newData = [...data]\n          const missingRows = min.row + pasteData.length - data.length\n\n          if (missingRows > 0) {\n            if (!lockRows) {\n              newData = [\n                ...newData,\n                ...new Array(missingRows).fill(0).map(() => createRow()),\n              ]\n            } else {\n              pasteData.splice(pasteData.length - missingRows, missingRows)\n            }\n          }\n\n          for (\n            let columnIndex = 0;\n            columnIndex < pasteData[0].length &&\n            min.col + columnIndex < columns.length - 1;\n            columnIndex++\n          ) {\n            const pasteValue = columns[min.col + columnIndex + 1]?.pasteValue\n\n            if (pasteValue) {\n              for (let rowIndex = 0; rowIndex < pasteData.length; rowIndex++) {\n                if (\n                  !isCellDisabled({\n                    col: min.col + columnIndex,\n                    row: min.row + rowIndex,\n                  })\n                ) {\n                  newData[min.row + rowIndex] = await pasteValue({\n                    rowData: newData[min.row + rowIndex],\n                    value: pasteData[rowIndex][columnIndex],\n                  })\n                }\n              }\n            }\n          }\n\n          onChange(newData)\n          setActiveCell(\n            setStateDeepEqual<Cell | null>({ col: min.col, row: min.row })\n          )\n          setSelectionCell(\n            setStateDeepEqual<Cell | null>({\n              col: Math.min(\n                min.col + pasteData[0].length - 1,\n                columns.length - 2\n              ),\n              row: min.row + pasteData.length - 1,\n            })\n          )\n        }\n\n        event.preventDefault()\n      }\n    },\n    [\n      activeCell,\n      columns,\n      createRow,\n      data,\n      editing,\n      isCellDisabled,\n      lockRows,\n      onChange,\n      selection,\n    ]\n  )\n  useDocumentEventListener('paste', onPaste)\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (selectionMode.active) {\n        const cursorIndex = getCursorIndex(event)\n\n        setSelectionCell(\n          setStateDeepEqual(\n            cursorIndex && {\n              col: selectionMode.columns\n                ? Math.max(0, cursorIndex.col)\n                : columns.length - 2,\n              row: selectionMode.rows\n                ? Math.max(0, cursorIndex.row)\n                : data.length - 1,\n            }\n          )\n        )\n        setEditing(false)\n      }\n    },\n    [getCursorIndex, selectionMode, columns.length, data.length]\n  )\n  useDocumentEventListener('mousemove', onMouseMove)\n\n  const onMouseDown = useCallback(\n    (event: MouseEvent) => {\n      const rightClick = event.button === 2\n      const clickInside =\n        containerRef.current?.contains(event.target as Node) || false\n      const cursorIndex = clickInside ? getCursorIndex(event, true) : null\n\n      if (contextMenuItems.length) {\n        return\n      }\n\n      if (\n        !clickInside &&\n        editing &&\n        activeCell &&\n        columns[activeCell.col + 1].keepFocus\n      ) {\n        return\n      }\n\n      const clickOnActiveCell =\n        cursorIndex &&\n        activeCell &&\n        activeCell.col === cursorIndex.col &&\n        activeCell.row === cursorIndex.row &&\n        !isCellDisabled(activeCell)\n\n      if (clickOnActiveCell && editing) {\n        return\n      }\n\n      const rightClickInSelection =\n        rightClick &&\n        selection &&\n        cursorIndex &&\n        cursorIndex.row >= selection.min.row &&\n        cursorIndex.row <= selection.max.row &&\n        cursorIndex.col >= selection.min.col &&\n        cursorIndex.col <= selection.max.col\n\n      const rightClickOnSelectedHeaders =\n        rightClick &&\n        selection &&\n        cursorIndex &&\n        cursorIndex.row === -1 &&\n        cursorIndex.col >= selection.min.col &&\n        cursorIndex.col <= selection.max.col\n\n      const rightClickOnSelectedGutter =\n        rightClick &&\n        selection &&\n        cursorIndex &&\n        cursorIndex.row >= selection.min.row &&\n        cursorIndex.row <= selection.max.row &&\n        cursorIndex.col === -1\n\n      if (rightClick && !disableContextMenu) {\n        setTimeout(\n          () => setContextMenu({ x: event.clientX, y: event.clientY }),\n          0\n        )\n      }\n\n      setEditing((clickOnActiveCell && !rightClick) || false)\n\n      setActiveCell(\n        setStateDeepEqual<Cell | null>(\n          cursorIndex && {\n            col:\n              (rightClickInSelection || rightClickOnSelectedHeaders) &&\n              activeCell\n                ? activeCell.col\n                : Math.max(0, cursorIndex.col),\n            row:\n              (rightClickInSelection || rightClickOnSelectedGutter) &&\n              activeCell\n                ? activeCell.row\n                : Math.max(0, cursorIndex.row),\n          }\n        )\n      )\n\n      if (cursorIndex && !rightClick) {\n        setSelectionMode(\n          setStateDeepEqual({\n            columns: cursorIndex.col !== -1,\n            rows: cursorIndex.row !== -1,\n            active: true as boolean,\n          })\n        )\n      }\n\n      if (!rightClickInSelection) {\n        if (cursorIndex?.col === -1 || cursorIndex?.row === -1) {\n          let col = cursorIndex.col\n          let row = cursorIndex.row\n\n          if (cursorIndex.col === -1) {\n            col = columns.length - 2\n          }\n\n          if (cursorIndex.row === -1) {\n            row = data.length - 1\n          }\n\n          if (rightClickOnSelectedHeaders && selectionCell) {\n            col = selectionCell.col\n          }\n\n          if (rightClickOnSelectedGutter && selectionCell) {\n            row = selectionCell.row\n          }\n\n          setSelectionCell(\n            setStateDeepEqual<Cell | null>({ col, row })\n          )\n        } else {\n          setSelectionCell(null)\n        }\n      }\n\n      if (clickInside) {\n        event.preventDefault()\n      }\n    },\n    [\n      disableContextMenu,\n      selectionCell,\n      getCursorIndex,\n      activeCell,\n      isCellDisabled,\n      editing,\n      columns,\n      data.length,\n      selection,\n      contextMenuItems.length,\n    ]\n  )\n  useDocumentEventListener('mousedown', onMouseDown)\n\n  const onMouseUp = useCallback(() => {\n    setSelectionMode(\n      setStateDeepEqual({\n        columns: false as boolean,\n        rows: false as boolean,\n        active: false as boolean,\n      })\n    )\n  }, [])\n  useDocumentEventListener('mouseup', onMouseUp)\n\n  const onContextMenu = useCallback(\n    (event: MouseEvent) => {\n      const clickInside =\n        containerRef.current?.contains(event.target as Node) || false\n\n      const cursorIndex = clickInside ? getCursorIndex(event, true) : null\n\n      const clickOnActiveCell =\n        cursorIndex &&\n        activeCell &&\n        activeCell.col === cursorIndex.col &&\n        activeCell.row === cursorIndex.row &&\n        editing\n\n      if (clickInside && !clickOnActiveCell) {\n        event.preventDefault()\n      }\n    },\n    [getCursorIndex, activeCell, editing]\n  )\n  useDocumentEventListener('contextmenu', onContextMenu)\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!activeCell) {\n        return\n      }\n\n      if (event.key.startsWith('Arrow') || event.key === 'Tab') {\n        if (editing && columns[activeCell.col + 1].disableKeys) {\n          return\n        }\n\n        if (editing && ['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n          return\n        }\n\n        const add = (\n          [x, y]: [number, number],\n          cell: Cell | null\n        ): Cell | null =>\n          cell && {\n            col: Math.max(0, Math.min(columns.length - 2, cell.col + x)),\n            row: Math.max(0, Math.min(data.length - 1, cell.row + y)),\n          }\n\n        if (event.key === 'Tab' && event.shiftKey) {\n          setActiveCell(setStateDeepEqual((cell) => add([-1, 0], cell)))\n          setSelectionCell(null)\n        } else {\n          const direction = {\n            ArrowDown: [0, 1],\n            ArrowUp: [0, -1],\n            ArrowLeft: [-1, 0],\n            ArrowRight: [1, 0],\n            Tab: [1, 0],\n          }[event.key]\n\n          if (event.ctrlKey || event.metaKey) {\n            direction[0] *= columns.length\n            direction[1] *= data.length\n          }\n\n          if (event.shiftKey) {\n            setSelectionCell(\n              setStateDeepEqual((cell) => add(direction, cell || activeCell))\n            )\n          } else {\n            setActiveCell(setStateDeepEqual((cell) => add(direction, cell)))\n            setSelectionCell(null)\n          }\n        }\n        setEditing(false)\n\n        event.preventDefault()\n      } else if (event.key === 'Escape') {\n        if (!editing && !selectionCell) {\n          setActiveCell(null)\n        }\n\n        setSelectionCell(null)\n        setEditing(false)\n      } else if (\n        event.key === 'Enter' &&\n        !event.ctrlKey &&\n        !event.metaKey &&\n        !event.altKey &&\n        !event.shiftKey\n      ) {\n        setSelectionCell(null)\n\n        if (editing) {\n          if (!columns[activeCell.col + 1].disableKeys) {\n            onDoneEditing()\n          }\n        } else if (!isCellDisabled(activeCell)) {\n          setEditing(true)\n          scrollTo(activeCell)\n        }\n      } else if (\n        event.key === 'Enter' &&\n        !event.ctrlKey &&\n        !event.metaKey &&\n        !event.altKey &&\n        event.shiftKey\n      ) {\n        onInsertRowAfter(selection?.max.row || activeCell.row)\n      } else if (\n        event.key === 'd' &&\n        (event.ctrlKey || event.metaKey) &&\n        !event.altKey &&\n        !event.shiftKey\n      ) {\n        onDuplicateRows(\n          selection?.min.row || activeCell.row,\n          selection?.max.row\n        )\n        event.preventDefault()\n      } else if (\n        event.key.match(/^[a-zA-Z0-9 ,.+-]$/) &&\n        !event.ctrlKey &&\n        !event.metaKey &&\n        !event.altKey\n      ) {\n        if (!editing && !isCellDisabled(activeCell)) {\n          setSelectionCell(null)\n          setEditing(true)\n          scrollTo(activeCell)\n        }\n      } else if (['Backspace', 'Delete'].includes(event.key)) {\n        if (!editing) {\n          onDelete()\n          event.preventDefault()\n        }\n      } else if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n        if (!editing) {\n          setActiveCell(\n            setStateDeepEqual<Cell | null>({ col: 0, row: 0 })\n          )\n          setSelectionCell(\n            setStateDeepEqual<Cell | null>({\n              col: columns.length - 2,\n              row: data.length - 1,\n            })\n          )\n          event.preventDefault()\n        }\n      }\n    },\n    [\n      scrollTo,\n      activeCell,\n      columns,\n      data.length,\n      editing,\n      isCellDisabled,\n      onDelete,\n      onDoneEditing,\n      onDuplicateRows,\n      onInsertRowAfter,\n      selection,\n      selectionCell,\n    ]\n  )\n  useDocumentEventListener('keydown', onKeyDown)\n\n  useEffect(() => {\n    if (!contextMenu && contextMenuItems.length) {\n      setContextMenuItems([])\n    }\n\n    if (contextMenu && !contextMenuItems.length) {\n      const items: ContextMenuItem[] = []\n\n      if (selection) {\n        items.push({\n          type: 'INSERT_ROW_BELLOW',\n          action: () => {\n            setContextMenu(null)\n            onInsertRowAfter(selection.max.row)\n          },\n        })\n      } else if (activeCell) {\n        items.push({\n          type: 'INSERT_ROW_BELLOW',\n          action: () => {\n            setContextMenu(null)\n            onInsertRowAfter(activeCell.row)\n          },\n        })\n      }\n\n      if (selection && selection.min.row !== selection.max.row) {\n        items.push({\n          type: 'DUPLICATE_ROWS',\n          fromRow: selection.min.row + 1,\n          toRow: selection.max.row + 1,\n          action: () => {\n            setContextMenu(null)\n            onDuplicateRows(selection.min.row, selection.max.row)\n          },\n        })\n      } else if (activeCell) {\n        items.push({\n          type: 'DUPLICATE_ROW',\n          action: () => {\n            setContextMenu(null)\n            onDuplicateRows(activeCell.row)\n          },\n        })\n      }\n\n      if (selection && selection.min.row !== selection.max.row) {\n        items.push({\n          type: 'DELETE_ROWS',\n          fromRow: selection.min.row + 1,\n          toRow: selection.max.row + 1,\n          action: () => {\n            setContextMenu(null)\n            onDeleteRows(selection.min.row, selection.max.row)\n          },\n        })\n      } else if (activeCell) {\n        items.push({\n          type: 'DELETE_ROW',\n          action: () => {\n            setContextMenu(null)\n            onDeleteRows(activeCell.row)\n          },\n        })\n      }\n\n      if (items.length) {\n        setContextMenuItems(items)\n      } else {\n        setContextMenu(null)\n      }\n    }\n  }, [\n    contextMenu,\n    selection,\n    onInsertRowAfter,\n    onDeleteRows,\n    onDuplicateRows,\n    contextMenuItems.length,\n    activeCell,\n  ])\n\n  const ContextMenuComponent = contextMenuComponent\n\n  // Counter components and props\n  const CounterComponent = counterComponent\n\n  const counterAddRows = useCallback(\n    (batchSize: number = 1) =>\n      onInsertRowAfter(\n        data?.length - 1,\n        Math.max(1, Math.round(Number(batchSize)))\n      ),\n    [data?.length, onInsertRowAfter]\n  )\n\n  // Grid context\n  const focus = Boolean(activeCell)\n  const gridContext = useMemo<GridContext>(\n    () => ({\n      focus: focus,\n      editing,\n      activeCell: activeCell,\n      columnWidths: columnWidths || columns.map(() => 0),\n      columnOffsets: columnOffsets || columns.map(() => 0),\n      innerWidth: innerWidth || 0,\n      rowHeight,\n      headerRowHeight,\n      selection,\n      columns,\n      data,\n      onChange,\n      onDoneEditing,\n      isCellDisabled,\n      onInsertRowAfter,\n      onDuplicateRows,\n      onDeleteRows,\n      rowClassName,\n    }),\n    [\n      focus,\n      editing,\n      activeCell,\n      columnWidths,\n      columnOffsets,\n      innerWidth,\n      rowHeight,\n      headerRowHeight,\n      selection,\n      columns,\n      data,\n      onChange,\n      onDoneEditing,\n      isCellDisabled,\n      onInsertRowAfter,\n      onDuplicateRows,\n      onDeleteRows,\n      rowClassName,\n    ]\n  )\n\n  return (\n    <DataSheetGridContext.Provider value={gridContext}>\n      <div ref={outsideContainerRef}>\n        <VariableSizeList\n          ref={listRef}\n          innerRef={containerRef}\n          innerElementType={InnerContainer}\n          estimatedItemSize={rowHeight}\n          itemSize={(i) => (i === 0 ? headerRowHeight : rowHeight)}\n          height={Math.min(\n            height,\n            innerHeight + (horizontalScrollBar ? scrollbarWidth : 0) + 1\n          )}\n          itemCount={(columnWidths && data.length + 1) || 0}\n          className='dsg-container'\n          width='100%'\n          children={RowComponent}\n        />\n\n        {createRow && !lockRows && (\n          <CounterComponent addRows={counterAddRows} />\n        )}\n\n        {contextMenu && contextMenuItems.length > 0 && (\n          <ContextMenuComponent\n            clientX={contextMenu.x}\n            clientY={contextMenu.y}\n            items={contextMenuItems}\n            close={() => setContextMenu(null)}\n          />\n        )}\n      </div>\n    </DataSheetGridContext.Provider>\n  )\n}\n","import { textColumn } from './columns/textColumn'\nimport { checkboxColumn } from './columns/checkboxColumn'\nimport { floatColumn } from './columns/floatColumn'\nimport { progressColumn } from './columns/progressColumn'\nimport { DataSheetGrid } from './components/DataSheetGrid'\nimport './styles.css'\n\nexport { DataSheetGrid, textColumn, checkboxColumn, floatColumn, progressColumn }\nexport default { DataSheetGrid, textColumn, checkboxColumn, floatColumn, progressColumn }\n"],"names":["Component","focus","onChange","value","ref","useRef","useLayoutEffect","current","select","blur","React","className","style","pointerEvents","e","target","textColumn","key","rest","render","rowData","setRowData","deleteValue","copyValue","pasteValue","FALSY","active","done","nextRow","type","checked","Boolean","onMouseDown","checkboxColumn","includes","toLowerCase","numberToString","isNaN","String","typeObj","useState","rawValue","setRawValue","useEffect","Math","abs","Number","round","targetValue","number","parseFloat","floatColumn","min","max","width","progressColumn","DataSheetGridContext","activeCell","headerRowHeight","rowHeight","columnWidths","columnOffsets","innerWidth","data","columns","selection","editing","isCellDisabled","onDoneEditing","undefined","onInsertRowAfter","onDuplicateRows","onDeleteRows","rowClassName","Row","rowIndex","index","useContext","headerRow","cx","map","columnIndex","gutterColumn","col","row","disabled","length","left","height","top","insertRowBelow","duplicateRow","deleteRow","slice","useScrollbarWidth","scrollbarWidth","setWidth","setTimeout","useColumnWidths","includeScrollbar","widths","setWidths","useMemo","reduce","total","w","offsets","i","Infinity","columnsHash","minWidth","maxWidth","join","el","document","createElement","display","position","children","column","child","flex","forEach","appendChild","body","insertBefore","offsetWidth","remove","buildSquare","right","bottom","buildClipPath","values","pair","InnerContainer","forwardRef","extraPixelV","rowI","extraPixelH","colI","activeCellRect","a","b","selectionRect","selectionIsDisabled","title","clipPath","compute","resultRef","getBoundingClientRect","throttledCompute","throttle","force","useGetBoundingRect","boundingRect","useDocumentEventListener","listener","addEventListener","removeEventListener","AddRowsCounter","addRows","setValue","onClick","tagName","onBlur","parseInt","onKeyPress","event","renderItem","item","fromRow","toRow","ContextMenu","clientX","clientY","items","close","containerRef","onClickOutside","useCallback","clickInside","contains","action","DEFAULT_DATA","DEFAULT_COLUMNS","DEFAULT_CREATE_ROW","DEFAULT_ON_CHANGE","DEFAULT_DUPLICATE_ROW","DEFAULT_IS_ROW_EMPTY","Object","every","DEFAULT_RENDER_GUTTER_COLUMN","setStateDeepEqual","newValue","oldValue","newVal","deepEqual","DataSheetGrid","rawColumns","gutterColumnWidth","createRow","isRowEmpty","counterComponent","contextMenuComponent","autoAddRow","lockRows","disableContextMenu","disableContextMenuRaw","renderGutterColumn","disableKeys","keepFocus","innerHeight","verticalScrollBar","horizontalScrollBar","listRef","outsideContainerRef","getContainerBoundingRect","useResizeObserver","entry","contentRect","setEditing","contextMenu","setContextMenu","contextMenuItems","setContextMenuItems","setActiveCell","selectionCell","setSelectionCell","rows","selectionMode","setSelectionMode","scrollTo","cell","topMax","topMin","props","scrollTop","state","scrollOffset","leftMax","leftMin","outerRef","_outerRef","scrollLeft","activeElement","getCursorIndex","boundingClientRect","outsideBoundingClientRect","x","y","findIndex","floor","count","Array","fill","rowMin","rowMax","onDelete","newData","onCopy","copyData","push","clipboardData","setData","preventDefault","onCut","onPaste","pasteData","getData","replace","split","missingRows","splice","onMouseMove","cursorIndex","rightClick","button","clickOnActiveCell","rightClickInSelection","rightClickOnSelectedHeaders","rightClickOnSelectedGutter","onMouseUp","onContextMenu","onKeyDown","startsWith","add","shiftKey","direction","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","Tab","ctrlKey","metaKey","altKey","match","ContextMenuComponent","CounterComponent","counterAddRows","batchSize","gridContext","Provider","VariableSizeList","innerRef","innerElementType","estimatedItemSize","itemSize","itemCount","RowComponent"],"mappings":"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"}